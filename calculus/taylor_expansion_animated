# Use Newton's method to approximate a root of a function with animation
var('x')

f(x) = x^2 - 1

xmin = 0
xmax = 3.1
ymin = -3
ymax = 9
guess = 3
fprime = f.derivative(x)
g(x) = x-f(x)/fprime(x)
N = 5
Sguess = [guess]
print "Initial Guess: %20.16f"%(guess)
P = plot(f(x), (xmin,xmax), ymin= ymin, ymax= ymax,color = "green",thickness=3)
Frames = [P]

for i in range(0,N):
    P += plot(point((guess,0),size = 20,rgbcolor=(0, 0, 1)))
    Frames += [P]
    
    P += line([(guess,0),(guess,f(guess))], color="gray", linestyle="dashed")
    Frames += [P]
    
    P += plot(point((guess,f(guess)),size = 20,rgbcolor=(1, 0, 0)))
    Frames += [P]
    
    h = f(guess) + fprime(guess)*(x-guess)
    P += plot(h, (xmin,xmax),ymin= ymin, ymax= ymax, color = "blue")
    Frames += [P]
    
    Nguess = g(guess)
    print "Next Guess:    %20.16f"%(Nguess)
    Sguess += [Nguess]
    guess = Nguess.n(digits=15)

print "An estimate of the root is %20.16f"%(Sguess[N])

a = animate(Frames)
a.show(delay=100)
